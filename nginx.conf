# user cloudngx root;
# worker_processes 1;
# #daemon off;

# error_log  /opt/middleware/nginx/latest/log/nginx/error.log warn;
# pid        /opt/middleware/nginx/latest/run/nginx.pid;
# events { worker_connections 1024; }

# http {
#   charset utf-8;
#   log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
#   access_log /opt/middleware/nginx/latest/log/nginx/access.log cloudfoundry;

#   default_type application/octet-stream;
#   include mime.types;
#   sendfile on;

#   gzip on;
#   gzip_disable "msie6";
#   gzip_comp_level 6;
#   gzip_min_length 1100;
#   gzip_buffers 16 8k;
#   gzip_proxied any;
#   gunzip on;
#   gzip_static always;
#   gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

#   tcp_nopush on;
#   keepalive_timeout 30;
#   port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
#   server_tokens off;

#   server {
#     listen 8080;
#     #listen       51000 ssl;
#     server_name localhost;

#     #ssl on;
#     ssl_certificate      /opt/middleware/nginx/latest/certs/server.crt;
#     ssl_password_file   /opt/middleware/nginx/latest/certs/global.pass;
#     ssl_certificate_key  /opt/middleware/nginx/latest/certs/server.key;

#     location / {
#           #root /opt/middleware/nginx/latest/share/nginx/html/DIT1/public;
#           #root /opt/middleware/nginx/latest/share/nginx/html/<%= ENV["APP_ROOT"] %>/public;
#           root /opt/middleware/nginx/latest/share/nginx/html/;
#           #root <%= ENV["APP_ROOT"] %>/public;
#           #<% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_pushstate")) %>
#           #if (!-e $request_filename) {
#           #  rewrite ^(.*)$ / break;
#           #}
#           #<% end %>
#           index index.html;
#               #<% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
#               #       autoindex on;
#               # <% end %>
#                 #<% if File.exists?(auth_file = File.join(ENV["APP_ROOT"], "nginx/conf/.htpasswd")) %>
#               #       auth_basic "Restricted";                                #For Basic Auth
#               #       auth_basic_user_file <%= auth_file %>;  #For Basic Auth
#               # <% end %>
#                 #<% if ENV["FORCE_HTTPS"] %>
#               #       if ($http_x_forwarded_proto != "https") {
#               #         return 301 https://$host$request_uri;
#               #       }
#               # <% end %>
#                 #<% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_ssi")) %>
#               #       ssi on;
#               # <% end %>
#           try_files $uri $uri/ /index.html;
#     }
#   }
# }